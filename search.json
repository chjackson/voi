[{"path":"https://chjackson.github.io/voi/TODO.html","id":"done","dir":"","previous_headings":"","what":"DONE","title":"NA","text":"Basic package structure EVPPI methods copied BCEA/SAVI tidied unit tests added Nonparametric regression importance sampling methods added EVSI, rough tests written Study design EVSI can specified R function simulate data , one built-standard designs - currently 1-arm 2 arm trials binary outcome. Chemotherapy model code added facilitate examples. Note exact format code may change implement different methods need access decision model function. Standard 2-level Monte Carlo","code":""},{"path":"https://chjackson.github.io/voi/TODO.html","id":"todo","dir":"","previous_headings":"","what":"TODO","title":"NA","text":"test model two decision options EVPPI Different regression methods options effects costs INLA: check plots work Test earth gam method , compare methods suggest advantages, developing book material. Standard errors earth. INLA ? Anything facilitate algebraic methods? plots communication? Use “wtp” “k”? MLMC QMC methods Parallel processing standard 2 level Monte Carlo, partial results convergence checking EVSI built-study designs - ones? need handle designs controlled one sample size? , make sure multiple arguments datagen_fn handled nicely Guidance users specify appropriate GAM formulae applications default formula intensive. Relatedly, appropriate number PSA samples use. Add Jalal EVSI method 2-level Monte Carlo Output analysis material Anna’s EVSI package. GENERAL Interface heemod package. packages interface ?","code":""},{"path":[]},{"path":"https://chjackson.github.io/voi/TODO.html","id":"using","dir":"","previous_headings":"PRINCIPLES OF PACKAGE DEVELOPMENT","what":"Using","title":"NA","text":"important! Just use time want VoI calculation, give feedback. Describe make work example. need anything tedious, may suggest package helpful. software anything better?","code":""},{"path":"https://chjackson.github.io/voi/TODO.html","id":"design","dir":"","previous_headings":"PRINCIPLES OF PACKAGE DEVELOPMENT","what":"Design","title":"NA","text":"Decide package , better done tools functions look like: argument formats, consistency different parts code Identifying task multiple times, therefore function task","code":""},{"path":"https://chjackson.github.io/voi/TODO.html","id":"coding","dir":"","previous_headings":"PRINCIPLES OF PACKAGE DEVELOPMENT","what":"Coding","title":"NA","text":"Clean, modular consistent style. function one thing can described concisely. Descriptive/concise variable function names. Code understandable much possible without need commenting. Comment cases won’t instantly obvious code . time add code, add unit test - concise example code executed - ensure test gives expected result every time code modified. House style: underscores dots separate words function variable names: my_variable_name use spaces clearly separate elements code, e.g.  x <- fn(, b, c) much easier read x<-fn(,b,c)","code":""},{"path":"https://chjackson.github.io/voi/TODO.html","id":"documentation","dir":"","previous_headings":"PRINCIPLES OF PACKAGE DEVELOPMENT","what":"Documentation","title":"NA","text":"Vignettes worked examples Check can reproduce results ConVoI 1 four case studies new ConVoI examples (book, papers) come code package. Note may raise “research needed” questions!","code":""},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":"https://chjackson.github.io/voi/articles/voi.html","id":"simple-example-model","dir":"Articles","previous_headings":"","what":"Simple example model","title":"voi for Value of Information calculation: package overview","text":"Suppose making decision two treatments. Treatment 1 costs effects. Treatment 2 net benefit describes average costs effects population. choose Treatment 2 incremental net benefit, relative treatment 1, positive. incremental net benefit simple case identical net benefit treatment 2, since net benefit treatment 1 zero. Suppose net benefit simply defined difference two uncertain parameters, \\(y(p_1,p_2) = p_1 - p_2\\), \\(p_1\\) gives effects, \\(p_2\\) gives costs. current uncertainty can described normal distributions \\(p_1 \\sim N(1,1)\\) \\(p_2 \\sim N(0,2)\\). make decision parameter uncertainty, one option preferred another expectation net benefit, respect uncertainty, greater. case, choose treatment 2, net benefit distributed \\(N(1, \\sqrt{1^2+2^2}) = N(1, \\sqrt{5})\\) expectation 1, whereas treatment 1 known net benefit zero. functions voi package work random sample model inputs outputs, generated “uncertainty analysis”, also known “probabilistic sensitivity analysis”. example model, simple generate, follows.","code":""},{"path":"https://chjackson.github.io/voi/articles/voi.html","id":"specifying-model-inputs","dir":"Articles","previous_headings":"Simple example model","what":"Specifying model inputs","title":"voi for Value of Information calculation: package overview","text":"inputs data frame one column per parameter one row per random sample.","code":"set.seed(1)  nsam <- 10000 inputs <- data.frame(p1 = rnorm(nsam, 1, 1),                       p2 = rnorm(nsam, 0, 2))"},{"path":"https://chjackson.github.io/voi/articles/voi.html","id":"specifying-model-outputs","dir":"Articles","previous_headings":"Simple example model","what":"Specifying model outputs","title":"voi for Value of Information calculation: package overview","text":"outputs can supplied either two forms. Net benefit form. data frame one column per treatment, one row per random sample, giving net benefit treatment. example, net benefit treatment 1 zero. Cost-effectiveness analysis form. list includes following three named elements (order) \"c\": data frame one column per treatment one row per random sample, containing sampled values expected costs treatment. \"e\": data frame one column per treatment one row per random sample, containing sampled values expected effects treatment. \"k\": vector values giving alternative amounts decision-maker willing pay one unit effectiveness, net (monetary) benefit \\(e \\times k - c\\). simple example, parameter \\(p_1\\) gives effects, \\(p_2\\) costs treatment 2, net benefit \\(y = p_1 - p_2\\) defined outputs_nb corresponds willingness--pay \\(k=1\\). cost-effectiveness format allows us compare VoI different willingness--pay values, e.g. 1, 2 3 say . Note objects returned bcea function BCEA package satisfy “cost-effectiveness analysis” format.","code":"outputs_nb <- data.frame(t1 = 0,                           t2 = inputs$p1 - inputs$p2) outputs_cea <- list(    e = data.frame(t1 = 0, t2 = inputs$p1),    c = data.frame(t1 = 0, t2 = inputs$p2),    k = c(1, 2, 3) )"},{"path":"https://chjackson.github.io/voi/articles/voi.html","id":"expected-value-of-perfect-information","dir":"Articles","previous_headings":"","what":"Expected value of perfect information","title":"voi for Value of Information calculation: package overview","text":"expected value perfect information expected net benefit given perfect information minus expected net benefit given current information.","code":""},{"path":"https://chjackson.github.io/voi/articles/voi.html","id":"computation-using-random-sampling","dir":"Articles","previous_headings":"Expected value of perfect information","what":"Computation using random sampling","title":"voi for Value of Information calculation: package overview","text":"Given current information, decided treatment 2. example know expected net benefit current information 1, mean distribution treatment 2’s net benefit. Random sampling can used illustrate compute expected net benefit given perfect information. sample parameter values mimics situation decision-making given perfect information, know parameters take values. sample, compare corresponding treatment 2 net benefit threshold zero, prefer treatment 1 net benefit negative, treatment 2 net benefit positive. net benefit sample net benefit chosen treatment given “known” sampled parameter values. expected net benefit given perfect information computed average sample (nb_perfect). practice usually know exact expectation (current uncertainty distribution) net benefit treatment, must compute mean random sample. case, colMeans(outputs_nb) give vector expected net benefit treatment. maximum net benefit decision take current information, case 1.0018431. become closer exact value 1, random samples drawn. alternative view EVPI terms opportunity loss, net benefit better decision made (known truth), minus net benefit decision make. opportunity loss can computed sample follows. EVPI mean opportunity loss.","code":"decision_current <- 2 nb_current <- 1 decision_perfect <- ifelse(outputs_nb$t2 < 0, 1, 2) nb_perfect <- ifelse(decision_perfect == 1, 0, outputs_nb$t2) (evpi1 <- mean(nb_perfect) - nb_current) ## [1] 0.4778316 opp_loss <- nb_perfect - nb_current mean(opp_loss) ## [1] 0.4778316"},{"path":"https://chjackson.github.io/voi/articles/voi.html","id":"using-the-voi-package-to-calculate-evpi","dir":"Articles","previous_headings":"Expected value of perfect information","what":"Using the voi package to calculate EVPI","title":"voi for Value of Information calculation: package overview","text":"voi package contains simple function evpi compute EVPI using procedure. function automatically detects whether outputs net benefit cost-effectiveness format. Note result slightly different evpi1, since uses sample-based estimate 1.0018431 expected net benefit current information, rather known expectation 1.","code":"library(voi) evpi(outputs_nb) ## [1] 0.4759885 evpi(outputs_cea) ##   k      evpi ## 1 1 0.4759885 ## 2 2 0.4028003 ## 3 3 0.4174207"},{"path":"https://chjackson.github.io/voi/articles/voi.html","id":"analytic-computation","dir":"Articles","previous_headings":"Expected value of perfect information","what":"Analytic computation","title":"voi for Value of Information calculation: package overview","text":"simple example, EVPI can also calculated “hand”, model just involves normal distributions. probability decision perfect information agrees decision current information, case, probability true value \\(N(1, \\sqrt{5})\\) actually positive. mean nb_perfect can calculated expected net benefit given correct decision, multiplied probability correct decision. former mean values outputs_nb$t2 positive, mean \\(N(1,\\sqrt{5})\\) truncated zero. mean truncated normal distribution known analytic form, represented following R function. exact value EVPI example, differs slightly estimate based Monte Carlo simulation. Unfortunately realistic decision-analytic models nice form, must rely Monte Carlo methods calculate expected value information.","code":"prob_correct <- 1 - pnorm(0, 1, sqrt(5)) mean_truncnorm <- function(mu, sig, lower=-Inf, upper=Inf){    a <- (lower-mu)/sig   b <- (upper-mu)/sig   mu + sig * (dnorm(a) - dnorm(b)) / (pnorm(b) - pnorm(a)) } enb_correct <- mean_truncnorm(1, sqrt(5), lower=0)  mean_nb_perfect <- enb_correct * prob_correct (evpi_exact <- mean_nb_perfect - nb_current) ## [1] 0.4798107"},{"path":"https://chjackson.github.io/voi/articles/voi.html","id":"expected-value-of-partial-perfect-information","dir":"Articles","previous_headings":"","what":"Expected value of partial perfect information","title":"voi for Value of Information calculation: package overview","text":"expected value partial perfect information (EVPPI) parameter \\(\\phi\\) decision-analytic model expected value learning exact value parameter, parameters remain uncertain. \\(\\phi\\) can comprise single scalar parameter, multiple parameters. \\(\\phi\\) refers multiple parameters EVPPI describes expected value learning parameters, often referred multiparameter EVPPI. EVPPI defined expected net benefit given perfect knowledge \\(\\phi\\), minus expected net benefit given current information. function evppi can used compute . variety alternative computational methods implemented function. default methods based nonparametric regression, come Strong et al. (2013). four fewer parameters, generalized additive model used. five , Gaussian process regression used.","code":""},{"path":"https://chjackson.github.io/voi/articles/voi.html","id":"invoking-the-evppi-function-","dir":"Articles","previous_headings":"Expected value of partial perfect information","what":"Invoking the evppi function.","title":"voi for Value of Information calculation: package overview","text":"call evppi, supply sample outputs inputs (form defined ) first two arguments. parameter parameters interest (whose EVPPI desired) supplied \"pars\" argument. can expressed various ways. () vector. joint EVPPI computed parameters vector. vector one element, function returns expected value perfect information parameters simultaneously (described “multiparameter” EVPPI Strong et al.). (b) list. separate EVPPI computed element list. second example , EVPPI \\(p_1\\), followed multiparameter EVPPI \\((p_1,p_2)\\). Note multiparameter EVPPI theoretically EVPI , case, vector includes parameters model (though note difference EVPI estimates due different computational method). evppi function returns data frame columns indicating parameter (parameters), corresponding EVPPI. outputs cost-effectiveness analysis format, separate column returned indicating willingness--pay.","code":"evppi(outputs_nb, inputs, pars=\"p1\") ##   pars      evppi ## 1   p1 0.08210074 evppi(outputs_nb, inputs, pars=c(\"p1\",\"p2\")) ##    pars     evppi ## 1 p1,p2 0.4759885 evppi(outputs_nb, inputs, pars=list(\"p1\",\"p2\")) ##   pars      evppi ## 1   p1 0.08210074 ## 2   p2 0.39029827 evppi(outputs_nb, inputs, pars=list(\"p1\",c(\"p1\",\"p2\"))) ##    pars      evppi ## 1    p1 0.08210074 ## 2 p1,p2 0.47598851 evppi(outputs_cea, inputs, pars=list(\"p1\",c(\"p1\",\"p2\"))) ##    pars k      evppi ## 1    p1 1 0.08210074 ## 2    p1 2 0.17052564 ## 3    p1 3 0.25895085 ## 4 p1,p2 1 0.47598851 ## 5 p1,p2 2 0.40280031 ## 6 p1,p2 3 0.41742073"},{"path":"https://chjackson.github.io/voi/articles/voi.html","id":"changing-the-default-calculation-method","dir":"Articles","previous_headings":"Expected value of partial perfect information","what":"Changing the default calculation method","title":"voi for Value of Information calculation: package overview","text":"method can changed supplying method argument evppi. methods additional options tune . full list options, see help(evppi).","code":""},{"path":"https://chjackson.github.io/voi/articles/voi.html","id":"gaussian-process-regression","dir":"Articles","previous_headings":"Expected value of partial perfect information > Changing the default calculation method","what":"Gaussian process regression","title":"voi for Value of Information calculation: package overview","text":"(Strong et al. (2013)). number random samples use computation can changed using nsim argument, can useful method can prohibitive large samples. sample 10000 reduced 1000.","code":"evppi(outputs_nb, inputs, pars=\"p1\", method=\"gp\", nsim=1000) ##   pars      evppi ## 1   p1 0.08834038"},{"path":"https://chjackson.github.io/voi/articles/voi.html","id":"multivariate-adaptive-regression-splines","dir":"Articles","previous_headings":"Expected value of partial perfect information > Changing the default calculation method","what":"Multivariate adaptive regression splines","title":"voi for Value of Information calculation: package overview","text":"variant generalized additive models based linear splines, uses package called earth.","code":"evppi(outputs_nb, inputs, pars=\"p1\", method=\"earth\") ##   pars      evppi ## 1   p1 0.08810086"},{"path":"https://chjackson.github.io/voi/articles/voi.html","id":"inla-method","dir":"Articles","previous_headings":"Expected value of partial perfect information > Changing the default calculation method","what":"INLA method","title":"voi for Value of Information calculation: package overview","text":"(Heath et al., Baio et al. ). needs following extra packages installed, using following commands. applicable calculating multiparameter EVPPI 2 parameters. toy example overkill, since two-parameter EVPPI simply EVPI, default method needs esoteric tweak (pfc_struc) work. However found efficient Gaussian process method many situations. See Heath et al., Baio et al. details implementing tuning method.","code":"install.packages('INLA', repos='https://inla.r-inla-download.org/R/stable') install.packages('splancs') evppi(outputs_nb, inputs, pars=c(\"p1\",\"p2\"), method=\"inla\", pfc_struc=\"iso\")"},{"path":"https://chjackson.github.io/voi/articles/voi.html","id":"bayesian-additive-regression-trees","dir":"Articles","previous_headings":"Expected value of partial perfect information > Changing the default calculation method","what":"Bayesian additive regression trees","title":"voi for Value of Information calculation: package overview","text":"promising novel method calculating multiparameter EVPPI:","code":"evppi(outputs_nb, inputs, pars=c(\"p1\",\"p2\"), method=\"bart\")"},{"path":"https://chjackson.github.io/voi/articles/voi.html","id":"tuning-the-generalized-additive-model-method","dir":"Articles","previous_headings":"Expected value of partial perfect information > Changing the default calculation method","what":"Tuning the generalized additive model method","title":"voi for Value of Information calculation: package overview","text":"generalized additive model formula can changed gam_formula argument. supplied gam function mgcv package. default formula uses tensor product, four parameters, basis dimension 4 terms per parameter assumed. challenge estimating EVPPI using GAMs define GAM sufficiently flexible represent outputs depend inputs, can also estimated practice, given complexity GAM number random samples available fit . Note spaces variable names inputs pars, gam_formula spaces converted underscores, else \"unexpected symbol\" error returned gam. standard error EVPPI estimates GAM method, resulting uncertainty parameters GAM approximation, can obtained calling evppi se=TRUE. uses \\(B\\) samples distribution GAM parameters, thus standard error can estimated accurately increasing B.","code":"evppi(outputs_nb, inputs, pars=c(\"p1\",\"p2\"), method=\"gam\", gam_formula=\"s(p1) + s(p2)\") ##    pars     evppi ## 1 p1,p2 0.4759885 evppi(outputs_nb, inputs, pars=\"p1\", se=TRUE, B=100) ##   pars      evppi          se ## 1   p1 0.08210074 0.007046717"},{"path":"https://chjackson.github.io/voi/articles/voi.html","id":"single-parameter-methods","dir":"Articles","previous_headings":"Expected value of partial perfect information > Changing the default calculation method","what":"Single-parameter methods","title":"voi for Value of Information calculation: package overview","text":"applicable computing EVPPI single scalar parameter. supplied package technical completeness, single-parameter EVPPI found sufficiently reliable use default GAM method, requires less tuning methods. method Strong Oakley: method Sadatsafavi et al.:","code":"evppi(outputs_nb, inputs, pars=\"p1\", n.blocks=20, method=\"so\") ##   pars      evppi ## 1   p1 0.07997543 evppi(outputs_nb, inputs, pars=\"p1\", method=\"sal\") ##   pars      evppi ## 1   p1 0.08151919"},{"path":"https://chjackson.github.io/voi/articles/voi.html","id":"evppimc","dir":"Articles","previous_headings":"Expected value of partial perfect information","what":"Traditional Monte Carlo nested loop method","title":"voi for Value of Information calculation: package overview","text":"(see e.g. Brennan et al.) generally slow provide reliable EVPPI estimates realistic models, provided package technical completeness. method available function evppi_mc. requires user supply two functions; one evaluate decision-analytic model, one generate parameter values.","code":""},{"path":"https://chjackson.github.io/voi/articles/voi.html","id":"model-evaluation-function","dir":"Articles","previous_headings":"Expected value of partial perfect information > Traditional Monte Carlo nested loop method","what":"Model evaluation function","title":"voi for Value of Information calculation: package overview","text":"function evaluates decision-analytic model specific parameter values. must one argument parameter. return value can either “net benefit” form “costs effects” form. “net benefit” form vector giving net benefit decision option. “costs effects” form matrix two rows, one column decision option. rows gives effects costs respectively decision option. names \"e\" \"c\" assumed identify effects costs. Otherwise first row assumed contain effects, second costs.","code":"model_fn_nb <- function(p1, p2){    c(0, p1 - p2)  } model_fn_cea <- function(p1, p2){    rbind(e = c(0, p1),          c = c(0, p2))  }"},{"path":"https://chjackson.github.io/voi/articles/voi.html","id":"parameter-simulation-function","dir":"Articles","previous_headings":"Expected value of partial perfect information > Traditional Monte Carlo nested loop method","what":"Parameter simulation function","title":"voi for Value of Information calculation: package overview","text":"function generates random sample \\(n\\) values current (joint) uncertainty distribution model parameters. returns data frame \\(n\\) rows one named column parameter.","code":"par_fn <- function(n){   data.frame(p1 = rnorm(n, 1, 1),              p2 = rnorm(n, 0, 2)) }"},{"path":"https://chjackson.github.io/voi/articles/voi.html","id":"invoking-evppi_mc","dir":"Articles","previous_headings":"Expected value of partial perfect information > Traditional Monte Carlo nested loop method","what":"Invoking evppi_mc","title":"voi for Value of Information calculation: package overview","text":"functions supplied arguments evppi_mc, along number samples draw inner outer loops. 1000 inner samples 100 outer samples give reasonable EVPPI estimate example, many samples may required result converge EVPPI complex models.","code":"evppi_mc(model_fn_nb, par_fn, pars=\"p1\", ninner=1000, nouter=100)"},{"path":"https://chjackson.github.io/voi/articles/voi.html","id":"accounting-for-parameter-correlation","dir":"Articles","previous_headings":"Expected value of partial perfect information > Traditional Monte Carlo nested loop method","what":"Accounting for parameter correlation","title":"voi for Value of Information calculation: package overview","text":"may want EVPPI parameter correlated another parameter. account correlation, par_fn requires extra argument arguments enable sample drawn appropriate conditional distribution. example, function specifies bivariate normal distribution \\((p_1,p_2)\\) correlation induced defining \\(E(p_2|p_1) = p_1\\). draw sample conditional distribution \\(p_2\\) given \\(p_1=2\\), example, call par_fn_corr(1, p1=2)$p2. argument p1 supplied, function return sample joint distribution marginalised \\(p_1\\), case supply p1 random p1 drawn followed p2|p1. function form passed evppi_mc parameters correlated. allows evppi_mc draw appropriate distribution inner loop.","code":"par_fn_corr <- function(n, p1=NULL){   p1_new <- if (is.null(p1)) rnorm(n, 1, 1) else p1   data.frame(p1 = p1_new,              p2 = rnorm(n, p1_new, 2)) } evppi_mc(model_fn_nb, par_fn_corr, pars=\"p1\", ninner=1000, nouter=100)"},{"path":"https://chjackson.github.io/voi/articles/voi.html","id":"expected-value-of-sample-information","dir":"Articles","previous_headings":"","what":"Expected value of sample information","title":"voi for Value of Information calculation: package overview","text":"expected value sample information expected value collecting specific amount data study designed give information model parameter parameters. defined expected net benefit given study data, minus expected net benefit current information. function evsi can used calculate . default method based nonparametric regression (Strong et al.). requires user either supply R function generate summarise study data, use one built-study designs, specify model parameters informed study. illustrate use evsi, suppose want collect sample \\(n\\) normally-distributed observations order get better estimate treatment 2 effectiveness \\(p_1\\). current information, \\(p_1\\) distributed \\(N(1,1)\\). collecting sample, expect distribution become precise, hence reduce chance making wrong decision. EVSI measures expected improvement net benefit sample. Denote study data \\(x_1,\\ldots,x_n\\), suppose distributed \\(x_i \\sim N(p_1, \\sigma)\\). Hence mean sample \\(\\bar{x} = \\frac{1}{n}\\sum_{=1}^n x_i\\) summary statistic containing information provided data \\(p_1\\). sample mean distributed \\(\\bar{x} \\sim N(p_1, \\sigma / \\sqrt{n})\\). Suppose simplicity sampling variance \\(\\sigma\\) data known equal 1. calculate EVSI using method, generate sample predictive distribution summary statistic current information. achieved generating value \\(p_1\\) current \\(N(1,1)\\) distribution, followed value \\(\\bar{x}\\) \\(N(p_1, \\sigma / \\sqrt{n})\\).","code":""},{"path":"https://chjackson.github.io/voi/articles/voi.html","id":"function-to-generate-study-data","dir":"Articles","previous_headings":"Expected value of sample information","what":"Function to generate study data","title":"voi for Value of Information calculation: package overview","text":"function generate sample predictive distribution summary statistic, given sample inputs current uncertainty distribution parameters. inputs format described , data frame one row per sample one column per parameter. function must return data frame one row per sample, one column per parameter informed study data. data frame cell contains summary statistic parameter simulated study. function datagen_normal vectorised way example. row returned data frame based different simulated \\(p_1\\) taken first column inputs, contains summary statistic \\(\\bar{x}\\) obtained dataset generated conditionally value \\(p_1\\). sample size included argument n data generation function. names returned data frame can anything (xbar used case descriptive). evsi function can used compute EVSI series different sample sizes design. Note EVSI converges EVPPI sample size increases.","code":"datagen_normal <- function(inputs, n=100, sd=1){   data.frame(xbar = rnorm(n = nrow(inputs),                           mean = inputs[,\"p1\"],                           sd = sd / sqrt(n))) }  set.seed(1) evsi(outputs_nb, inputs, datagen_fn = datagen_normal, n=c(10,100,1000)) ##      n       evsi ## 1   10 0.07440250 ## 2  100 0.08106261 ## 3 1000 0.08189925"},{"path":"https://chjackson.github.io/voi/articles/voi.html","id":"evsibuiltin","dir":"Articles","previous_headings":"Expected value of sample information","what":"Built-in study designs","title":"voi for Value of Information calculation: package overview","text":"function datagen_normal also included voi package built-study design. invoke evsi function built-study design, supply name design (case \"normal_known\") name parameter parameters (corresponding column “inputs”) estimated study data. known standard deviation defaults 1, can changed, e.g. 2, calling evsi aux_pars argument, e.g. evsi(..., aux_pars=list(sd=2), ...). Note results slightly different every time evsi function invoked arguments, due Monte Carlo error generating data (unless seed set R function set_seed invocation). built-study designs include \"binary\": single sample observations binary outcome. Requires one parameter specified pars, , probability outcome. \"trial_binary\": two-arm trial binary outcome. Requires two parameters specified pars: probability outcome arm 1 2 respectively. sample size arm, specifed n argument evsi, binomial outcomes returned first second column respectively.","code":"evsi(outputs_nb, inputs, study = \"normal_known\", n=c(100,1000), pars = \"p1\") ##      n       evsi ## 1  100 0.07998166 ## 2 1000 0.08197188 evsi(outputs_cea, inputs, study = \"normal_known\", n=c(100,1000), pars = \"p1\") ##      n k       evsi ## 1  100 1 0.07976014 ## 2 1000 2 0.16666306 ## 3  100 3 0.25356597 ## 4 1000 1 0.08216435 ## 5  100 2 0.17052103 ## 6 1000 3 0.25887874"},{"path":"https://chjackson.github.io/voi/articles/voi.html","id":"importance-sampling-method","dir":"Articles","previous_headings":"Expected value of sample information","what":"Importance sampling method","title":"voi for Value of Information calculation: package overview","text":"alternative method comes Menzies (2015) based importance sampling. can invoked evsi(..., method=\"\"). well data generation function format, also requires user supply likelihood function study data. illustrated simple normal example. likelihood function acts one row data frame \\(Y\\) produced data generation function, returns data frame number rows matching rows inputs. row returned data frame gives sampling density row \\(Y\\) given corresponding parameter values inputs. corresponding EVSI calculation involves building large matrix likelihoods combinations simulated datasets simulated parameters. user-supplied likelihood function consistently define model data data generation function (package check !), names parameters outputs match names defined inputs data generation function. method typically slower default nonparametric regression method, may worth setting nsim value lower number samples inputs. nsim=1000 used 1000 samples used, instead full 10000 samples contained inputs. , study model available built-study design, instead writing user-defined likelihood data generation function, evsi can also invoked study=\"normal_known\", method=\"\".","code":"likelihood_normal <- function(Y, inputs, n=100, sig=1){   mu <- inputs[,\"p1\"]   dnorm(Y[,\"xbar\"], mu, sig/sqrt(n)) }  evsi(outputs_nb, inputs, datagen_fn = datagen_normal, likelihood = likelihood_normal,       n=100, pars = \"p1\", method=\"is\", nsim=1000) ##     n      evsi ## 1 100 0.0864487 evsi(outputs_nb, inputs, study = \"normal_known\", n=100, pars = \"p1\", method=\"is\", nsim=1000) ##     n       evsi ## 1 100 0.08619358"},{"path":"https://chjackson.github.io/voi/articles/voi.html","id":"moment-matching-method","dir":"Articles","previous_headings":"Expected value of sample information","what":"Moment matching method","title":"voi for Value of Information calculation: package overview","text":"momemt matching method Heath et al. available evsi(..., method=\"mm\"). implementation voi package experimental fully tested - note another implementation https://github.com/annaheath/EVSI. generalisation method efficiently estimate EVSI design many different sample sizes (Heath et al) implemented yet, currently evsi(..., method=\"mm\") can handle one sample size time. Roughly, method works follows (see Heath et al. full details) small set values \\(\\theta_q: q = 1,\\ldots, Q\\) simulated decision model parameters \\(\\theta\\) (typically \\(Q<50\\) sufficient). \\(\\theta_q\\), future study data \\(x_q|\\theta_q\\) generated sampling distribution (specified study built-study designs, datagen_fn custom designs). sample generated posterior distribution \\(\\theta | x_q\\). posterior variance \\(v_q\\) decision model net benefit \\(NB(\\theta)\\) deduced sample. average posterior variance samples \\(q\\) compared prior variance, obtaining estimate proportion uncertainty explained proposed study. used “shrinkage” factor modify regression-based EVPPI computation produce estimate EVSI. use moment matching method, evsi needs know information needed EVSI calculation functions. includes: function model_fn evaluate decision model, function par_fn sample distribution model parameters current information. supplied form EVPPI Monte Carlo method function, evppi_mc. information data \\(x_q\\) analysed produce posterior. built-study designs, nothing extra needed user , information built . custom study designs specified using datagen_fn, extra function defined, supplied analysis_fn argument evsi(..., method=\"mm\"). function take three arguments: data data frame names matching output datagen_fn args list required constants, e.g. prior parameters options posterior computation pars names parameters whose posterior sampled. return data frame row containing draw posterior distribution parameters named columns. specialised Bayesian analysis software JAGS Stan needed, function wrap around complete call software. analysis_args: list constants data analysis function needs know. needed whether built-design used. typically include parameters define prior distributions, settings control posterior computation (e.g. number MCMC iterations). specific components needed list depends study design, specified analysis_fn study.","code":""},{"path":"https://chjackson.github.io/voi/articles/voi.html","id":"moment-matching-method-example","dir":"Articles","previous_headings":"Expected value of sample information > Moment matching method","what":"Moment matching method: example","title":"voi for Value of Information calculation: package overview","text":"first EVSI example computation shown , implemented using moment matching method study sample size 1000. Recall sampling distribution study data normal known variance, specified study=\"normal_known\". Bayesian inference procedure simple conjugate normal analysis, built package, need supply analysis_fn. However need supply analysis_args. constants required conjugate normal analysis prior mean SD parameter p1, sampling SD individual-level observation study, \\(\\sigma=1\\). estimate EVSI fairly close result regression method. moment matching method also computes regression-based estimate EVPPI, returned alongside EVSI estimate. lot randomness involved computation method, thus Monte Carlo error reproducible unless seed set. error can controlled somewhat changing \\(Q\\) (default 30) call evsi, number posterior samples (default 1000) niter component analysis_args, size outputs inputs (VoI calculation methods).","code":"evsi(outputs_nb, inputs, study = \"normal_known\", n=10000, pars = \"p1\", method=\"mm\", Q=30,      model_fn = model_fn_nb, par_fn = par_fn,      analysis_args = list(prior_mean=1, prior_sd=1, sampling_sd=1, niter=1000)) ##       n       evsi ## 1 10000 0.05094176"},{"path":"https://chjackson.github.io/voi/articles/voi.html","id":"value-of-information-in-models-for-estimation","dir":"Articles","previous_headings":"","what":"Value of Information in models for estimation","title":"voi for Value of Information calculation: package overview","text":"Suppose aim analysis get precise estimate quantity, rather make explicit decision policies. VoI methodology can still used determine uncertain parameters estimate sensitive (EVPPI) improvements precision expected new data (EVSI). expected value information expected reduction variance quantity interest given information. illustrate example. Suppose want estimate prevalence infection. two sources information. survey data think biased, true infection rate higher rate infection observed survey. expert judgement extent bias data, uncertainty associated . Firstly, suppose survey observed 100 people 5 infected. Using vague Beta(0,0) prior (flat logit scale), posterior distribution survey infection rate \\(p_1\\) Beta(5,95). draw random sample . Secondly, guess true risk infected twice risk survey population, uncertain relative risk. might approximate belief placing normal prior distribution log odds ratio \\(\\beta\\), mean designed reflect doubled relative risk, variance high concentrates relative risk positive values. Hence true infection probability \\(p_2\\) function two parameters \\(p_1\\) \\(\\beta\\): \\[p_2 = expit(logit(p_1) + \\beta)\\]. draw random samples current belief distributions \\(\\beta\\) \\(p_2\\), graphically compare distributions infection probability \\(p_1\\) survey data (black) true infection probability \\(p_2\\) (red).  model output quantity \\(p_2\\), model inputs \\(p_1\\) \\(\\beta\\). now want determine expected value information. measured terms expected reductions variance \\(p_2\\). decision-theoretic interpretation, “loss” measured squared error parameter estimate compared true parameter value. See Jackson et al. 2019.","code":"p1 <- rbeta(10000, 5, 95) beta <- rnorm(10000, 0.8, 0.4) p2 <- plogis(qlogis(p1) + beta) plot(density(p1), lwd=2, xlim=c(0,1), main=\"\") lines(density(p2), col=\"red\", lwd=2) legend(\"topright\", col=c(\"black\",\"red\"), lwd=c(2,2),         legend=c(\"Surveyed infection probability\", \"True infection probability\"))"},{"path":"https://chjackson.github.io/voi/articles/voi.html","id":"evpi-and-evppi-for-estimation","dir":"Articles","previous_headings":"Value of Information in models for estimation","what":"EVPI and EVPPI for estimation","title":"voi for Value of Information calculation: package overview","text":"EVPI trivially \\(var(p_2)\\), variance current information, can compute sample interesting quantity EVPPI parameter. describes expected reduction variance given perfect knowledge particular parameter. example, compute EVPPI \\(p_1\\) \\(\\beta\\), respectively, defined \\[EVPPI[p_1] = var(p_2) - E(var(p_2| p_1)\\] \\[EVPPI[\\beta] = var(p_2) - E(var(p_2 | \\beta)\\] can computed using nonparametric regression, described Jackson et al. 2019. implemented function evppivar voi package. Hence slightly greater improvement variance expected knowing true risk biased sample, compared knowing relative odds infection. EVPPI values easier interpret converted scale standard deviation. subtract EVPPI original variance \\(p_2\\) get, example \\(E(var(p_2) | p_1)\\). square root estimate standard deviation \\(p_2\\) learnt \\(p_1\\) (note exactly expected SD remaining, since swap order square root expectation operators). Hence expect reduce SD \\(p_1\\) around 2/3 original value learning \\(p_1\\) \\(\\beta\\).","code":"var(p2) ## [1] 0.003566403 inputs <- data.frame(p1, beta) (evppi_beta <- evppivar(p2, inputs, par=\"beta\")) ##   pars       evppi ## 1 beta 0.001498406 (evppi_p1 <- evppivar(p2, inputs, par=\"p1\")) ##   pars       evppi ## 1   p1 0.001915543 sqrt(var(p2)) # or sd(p2) ## [1] 0.05971937 sqrt(var(p2) - evppi_beta$evppi) ## [1] 0.04547524 sqrt(var(p2) - evppi_p1$evppi) ## [1] 0.04063079"},{"path":"https://chjackson.github.io/voi/articles/voi.html","id":"how-regression-based-evppi-estimation-works","dir":"Articles","previous_headings":"Value of Information in models for estimation","what":"How regression-based EVPPI estimation works","title":"voi for Value of Information calculation: package overview","text":"EVPPI estimated nonparametric regression output input. Recall method Strong et al. (2013) used evppi models decisions. Jackson et al. 2019 showed method applied wider class problems, including models estimation. estimate expected reduction variance \\(p_2\\), given knowledge \\(p_1\\), evppivar function fits regression model p2 outcome, p1 single predictor. generalized additive model based splines fitted using gam function mgcv package.  Taking variance residuals regression (observed minus fitted values) produces estimate \\(E(var(p_2 | p_1 = x))\\), intuitively, expected variance given knowledge \\(p_1\\), , subtracted variance \\(p_2\\), gives EVPPI. agrees (Monte Carlo error) value produced evppivar, obtained closely-related method, variance fitted values regression. equal total variance minus variance residuals, “law total variance”: \\[var(Y) - E_{X}\\left[var_{Y| X}(Y |X)\\right] = var_{X} \\left[E_{Y|X}(Y|X)\\right]\\]","code":"plot(x=p1, y=p2, pch=\".\") mod <- mgcv::gam(p2 ~ te(p1, bs=\"cr\")) p1fit <- fitted(mod) lines(sort(p1), p1fit[order(p1)], col=\"blue\") p1res <- p2 - p1fit var(p2) - var(p1res) ## [1] 0.001916577 var(p1fit) ## [1] 0.001915543"},{"path":"https://chjackson.github.io/voi/articles/voi.html","id":"evsi-for-estimation","dir":"Articles","previous_headings":"Value of Information in models for estimation","what":"EVSI for estimation","title":"voi for Value of Information calculation: package overview","text":"Now suppose planned collect additional survey data prevalence infection. First suppose can collect data biased population used estimate \\(p_1\\). EVSI can computed show expected value surveying \\(n\\) individuals, different sample sizes \\(n\\). achieved using function evsivar voi package, follows. evppivar, samples prior distributions parameters supplied data frame inputs. study=\"binary\" indicates proposed study consists binary outcome observed n individuals. pars=\"p1\" indicates input parameter informed study, words, parameter assumed generate study data. proposed sample sizes increase, expected value sample information informing \\(p_1\\) converges EVPPI, expected value perfect information \\(p_1\\). Alternatively, suppose able collect information unbiased population, whose infection prevalence \\(p_2\\). , suppose surveyed \\(n\\) individuals, infected probability \\(p_2\\). case, can compute EVSI using evsivar model inputs defined equal model outputs, follows: unbiased data clearly valuable biased data, double variance reductions biased data sample size. sample size increases, value converges EVPI, hence (asymptote) eliminate uncertainty quantity interest \\(p_2\\).","code":"evsivar(p2, inputs, study = \"binary\", pars=\"p1\", n=c(100,1000,10000)) ##       n         evsi ## 1   100 0.0009579006 ## 2  1000 0.0017476769 ## 3 10000 0.0018962755 inputs_p2 = data.frame(p2 = p2) evsivar(p2, inputs=inputs_p2, study = \"binary\", pars=\"p2\", n=c(100, 1000, 10000)) ##       n        evsi ## 1   100 0.002808475 ## 2  1000 0.003471948 ## 3 10000 0.003556959"},{"path":"https://chjackson.github.io/voi/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Christopher Jackson. Author, maintainer. Anna Heath. Author. Gianluca Baio. Contributor. Kofi Placid Adragni. Contributor.            Author code taken ldr package Andrew Raim. Contributor.            Author code taken ldr package","code":""},{"path":"https://chjackson.github.io/voi/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Jackson C, Heath (2022). voi: Expected Value Information. R package version 0.1, https://chjackson.github.io/voi/.","code":"@Manual{,   title = {voi: Expected Value of Information},   author = {Christopher Jackson and Anna Heath},   year = {2022},   note = {R package version 0.1},   url = {https://chjackson.github.io/voi/}, }"},{"path":"https://chjackson.github.io/voi/index.html","id":"voi-a-generic-package-to-calculate-the-expected-value-of-information","dir":"","previous_headings":"","what":"voi: a generic package to calculate the expected value of information","title":"Expected Value of Information ","text":"common interface several methods calculate Expected Value (Partial) Perfect Information Expected Value Sample Information project ConVOI Group: Collaborative Network Value Information","code":""},{"path":"https://chjackson.github.io/voi/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Expected Value of Information ","text":"{r eval=FALSE} install.packages(\"devtools\") # devtools already installed library(devtools) install_github(\"chjackson/voi\")","code":""},{"path":"https://chjackson.github.io/voi/index.html","id":"user-guide","dir":"","previous_headings":"","what":"User guide","title":"Expected Value of Information ","text":"voi Value Information calculation: package overview","code":""},{"path":"https://chjackson.github.io/voi/index.html","id":"source-code","dir":"","previous_headings":"","what":"Source code","title":"Expected Value of Information ","text":"Github repository","code":""},{"path":"https://chjackson.github.io/voi/reference/all_interactions.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a string with all interactions of a certain degree, to be used in a GAM formula — all_interactions","title":"Generate a string with all interactions of a certain degree, to be used in a GAM formula — all_interactions","text":"Generate string interactions certain degree, used GAM formula","code":""},{"path":"https://chjackson.github.io/voi/reference/all_interactions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a string with all interactions of a certain degree, to be used in a GAM formula — all_interactions","text":"","code":"all_interactions(x, degree = 2)"},{"path":"https://chjackson.github.io/voi/reference/all_interactions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a string with all interactions of a certain degree, to be used in a GAM formula — all_interactions","text":"x Character vector variable names degree Maximum interaction degree","code":""},{"path":"https://chjackson.github.io/voi/reference/all_interactions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a string with all interactions of a certain degree, to be used in a GAM formula — all_interactions","text":"string looking like right hand side GAM formula tensor product interactions. example, x c(\"x1\",\"x2\",\"x3\"), all_interactions(x, degree=2) return \"te(x1,x2) + te(x1,x3) + te(x1,x3)\"","code":""},{"path":"https://chjackson.github.io/voi/reference/all_interactions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate a string with all interactions of a certain degree, to be used in a GAM formula — all_interactions","text":"","code":"x <- c(\"x1\",\"x2\",\"x3\") all_interactions(x, 2) #> [1] \"te(x1,x2) + te(x1,x3) + te(x2,x3)\""},{"path":"https://chjackson.github.io/voi/reference/check_model_fn.html","id":null,"dir":"Reference","previous_headings":"","what":"Check that a decision-analytic model function is of the appropriate form.  Detect if it returns net benefit or CEA format\nnote check_outputs adds a class — check_model_fn","title":"Check that a decision-analytic model function is of the appropriate form.  Detect if it returns net benefit or CEA format\nnote check_outputs adds a class — check_model_fn","text":"Check decision-analytic model function appropriate form.  Detect returns net benefit CEA format note check_outputs adds class","code":""},{"path":"https://chjackson.github.io/voi/reference/check_model_fn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check that a decision-analytic model function is of the appropriate form.  Detect if it returns net benefit or CEA format\nnote check_outputs adds a class — check_model_fn","text":"","code":"check_model_fn(   model_fn,   par_fn,   mfargs = NULL,   outputs_class = NULL,   verbose = FALSE )"},{"path":"https://chjackson.github.io/voi/reference/check_model_fn.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check that a decision-analytic model function is of the appropriate form.  Detect if it returns net benefit or CEA format\nnote check_outputs adds a class — check_model_fn","text":"modified copy model_fn class attribute indicating whether net benefit \"nb\" cost-effectiveness \"cea\" format, attribute \"nopt\" giving number decision options.","code":""},{"path":"https://chjackson.github.io/voi/reference/check_regression.html","id":null,"dir":"Reference","previous_headings":"","what":"Check the fit of a regression model used to estimate EVPPI or EVSI — check_regression","title":"Check the fit of a regression model used to estimate EVPPI or EVSI — check_regression","text":"Produces diagnostic plots summaries regression models used estimate EVPPI EVSI, mainly order check residuals mean zero.","code":""},{"path":"https://chjackson.github.io/voi/reference/check_regression.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check the fit of a regression model used to estimate EVPPI or EVSI — check_regression","text":"","code":"check_regression(   x,   pars = NULL,   n = NULL,   comparison = 1,   outcome = \"costs\",   plot = TRUE )"},{"path":"https://chjackson.github.io/voi/reference/check_regression.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check the fit of a regression model used to estimate EVPPI or EVSI — check_regression","text":"x Output evppi evsi. argument check=TRUE must used calling evppi evsi, allow regression model objects gam earth preserved.  (done default, since objects can large.).   attr(x, \"models\") cont pars Parameter (parameter group) whose EVPPI calculation checked. pars component object returned evppi. relevant x result evppi calculation. n Sample size whose EVSI calculation checked. n component object returned evsi. relevant x result evsi calculation. comparison relevant two treatments decision model. Different regression models used comparisons different treatments baseline treatment. comparison integer identifying models checked. outcome \"costs\" \"effects\".  relevant outputs cost-effectiveness format calling evppi evsi, hence different regressions used costs effects.  default, outcome=\"costs\" used, regression costs checked. plot FALSE, numerical statistics returned, plot made.","code":""},{"path":"https://chjackson.github.io/voi/reference/check_regression.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check the fit of a regression model used to estimate EVPPI or EVSI — check_regression","text":"possible, appropriate statistic returned allows regression model compared regression models implemented using method different assumptions.   method==\"gam\", Akaike's information criterion (AIC). method==\"earth\", generalised cross-validation statistic gcv.    Currently implemented methods.","code":""},{"path":"https://chjackson.github.io/voi/reference/check_regression.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Check the fit of a regression model used to estimate EVPPI or EVSI — check_regression","text":"VoI estimation, key thing looking residuals mean zero, hence mean model output represented well regression function model input parameters.  matter variance residuals non-constant, non-normally distributed. Models produced method=\"gam\" summarised using gam.check Models produced method=\"earth\" summarised using plot.earth regression model, fitted() residuals() methods defined models, histogram residuals scatterplot residuals fitted values produced.","code":""},{"path":"https://chjackson.github.io/voi/reference/check_regression.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check the fit of a regression model used to estimate EVPPI or EVSI — check_regression","text":"","code":"# TODO and refer in vignette"},{"path":"https://chjackson.github.io/voi/reference/chemo_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Chemotherapy cost-effectiveness model — chemo_cea","title":"Chemotherapy cost-effectiveness model — chemo_cea","text":"artificial health economic decision model typical Markov model structure, used illustrating Value Information methods. Functions provided generate model parameters evaluate model, samples probabilistic analysis model provided built-datasets.","code":""},{"path":"https://chjackson.github.io/voi/reference/chemo_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Chemotherapy cost-effectiveness model — chemo_cea","text":"","code":"chemo_cea  chemo_nb  chemo_pars  chemo_pars_fn(n)  chemo_model_nb(   p_side_effects_t1,   p_side_effects_t2,   p_home_home,   p_home_hospital,   p_home_recover,   p_hospital_hospital,   p_hospital_recover,   p_hospital_dead,   c_home_care,   c_hospital,   c_death,   u_recovery,   u_home_care,   u_hospital )  chemo_model_cea(   p_side_effects_t1,   p_side_effects_t2,   p_home_home,   p_home_hospital,   p_home_recover,   p_hospital_hospital,   p_hospital_recover,   p_hospital_dead,   c_home_care,   c_hospital,   c_death,   u_recovery,   u_home_care,   u_hospital )  chemo_model_lor_nb(   p_side_effects_t1,   logor_side_effects,   p_home_home,   p_home_hospital,   p_home_recover,   p_hospital_hospital,   p_hospital_recover,   p_hospital_dead,   c_home_care,   c_hospital,   c_death,   u_recovery,   u_home_care,   u_hospital )  chemo_model_lor_cea(   p_side_effects_t1,   logor_side_effects,   p_home_home,   p_home_hospital,   p_home_recover,   p_hospital_hospital,   p_hospital_recover,   p_hospital_dead,   c_home_care,   c_hospital,   c_death,   u_recovery,   u_home_care,   u_hospital )"},{"path":"https://chjackson.github.io/voi/reference/chemo_model.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Chemotherapy cost-effectiveness model — chemo_cea","text":"Samples 10000 probabilistic analysis model made available package, following data objects: chemo_pars: Sample distributions parameters, data frame names documented . chemo_cea: List components e (sampled effects), c (sampled costs), k (set five equally-spaced willingess--pay values 10000 50000 pounds).   effects costs data frames two columns, one decision option. chemo_nb: Data frame two columns, giving net monetary benefit decision option, willingness--pay 20000 pounds.","code":""},{"path":"https://chjackson.github.io/voi/reference/chemo_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Chemotherapy cost-effectiveness model — chemo_cea","text":"n Number samples generate uncertainty distribution parameters chemo_pars_fn. p_side_effects_t1 Probability side effects treatment 1 p_side_effects_t2 Probability side effects treatment 2 p_home_home Annual transition probability home home p_home_hospital Transition probability home hospital p_home_recover Transition probability home recovery p_hospital_hospital Transition probability hospital hospital p_hospital_recover Transition probability hospital recovery p_hospital_dead Transition probability hospital death c_home_care Cost yearly period treatment home c_hospital Cost hospital treatment c_death Cost death u_recovery Utility period recovery state u_home_care Utility home care state u_hospital Utility hospital state logor_side_effects Log odds ratio side effects treatment 1 treatment 2","code":""},{"path":"https://chjackson.github.io/voi/reference/chemo_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Chemotherapy cost-effectiveness model — chemo_cea","text":"Two alternative functions provided evaluate decision model given parameters. chemo_model_nb returns vector elements giving net monetary benefit standard care novel treatment, respectively, willingness--pay 20,000 pounds per QALY. chemo_model_cea returns matrix : two rows, first expected costs second expected effects (QALYs) fifty year time horizon, two columns, first \"standard care\" decision option, second novel treatment. chemo_model_lor_nb chemo_model_lor_cea model, parameterised terms probability side effects standard care p_side_effects_t1 log odds ratio side effects treatment groups logor_side_effects, rather terms p_side_effects_t1 p_side_effects_t2 chemo_pars_fn generates sample uncertainty distribution parameters chemotherapy model . returns data frame parameters matching arguments chemo_model_nb, following additional derived parameters: logor_side_effects: log odds ratio side effects treatment 2 compared 1 p_hospitalised_total: probability hospitalisation 50 year time horizon p_died: probability death time horizon, given hospitalisation lambda_home: conditional probability patient recovers given hospitalised lambda_hosp: conditional probability patient hospital recovers given die","code":""},{"path":"https://chjackson.github.io/voi/reference/evpi.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the expected value of perfect information from a decision model — evpi","title":"Calculate the expected value of perfect information from a decision model — evpi","text":"Calculate expected value perfect information decision model using standard Monte Carlo simulation","code":""},{"path":"https://chjackson.github.io/voi/reference/evpi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the expected value of perfect information from a decision model — evpi","text":"","code":"evpi(outputs, nsim = NULL)"},{"path":"https://chjackson.github.io/voi/reference/evpi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the expected value of perfect information from a decision model — evpi","text":"outputs take one two forms \"net benefit\" form: matrix data frame samples uncertainty distribution expected net benefit.  number rows equal number samples, number columns equal number decision options. \"cost-effectiveness analysis\" form: list following named components: \"c\": matrix data frame samples distribution costs.  one column decision option. \"e\": matrix data frame samples distribution effects, likewise. \"k\": vector willingness--pay values. Objects class \"bcea\", created BCEA package, \"cost-effectiveness analysis\" format, therefore may supplied outputs argument. outputs matrix data frame, assumed \"net benefit\" form.  Otherwise list, assumed \"cost effectiveness analysis\" form. nsim Number simulations model use calculating EVPPI.  first nsim rows objects inputs outputs used.","code":""},{"path":"https://chjackson.github.io/voi/reference/evpi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the expected value of perfect information from a decision model — evpi","text":"expected value perfect information, either single value, data frame indicating value willingness--pay.","code":""},{"path":"https://chjackson.github.io/voi/reference/evppi.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the expected value of partial perfect information from a decision model — evppi","title":"Calculate the expected value of partial perfect information from a decision model — evppi","text":"Calculate expected value partial perfect information decision model","code":""},{"path":"https://chjackson.github.io/voi/reference/evppi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the expected value of partial perfect information from a decision model — evppi","text":"","code":"evppi(   outputs,   inputs,   pars = NULL,   method = NULL,   se = FALSE,   B = 1000,   nsim = NULL,   verbose = FALSE,   check = FALSE,   ... )"},{"path":"https://chjackson.github.io/voi/reference/evppi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the expected value of partial perfect information from a decision model — evppi","text":"outputs take one two forms \"net benefit\" form: matrix data frame samples uncertainty distribution expected net benefit.  number rows equal number samples, number columns equal number decision options. \"cost-effectiveness analysis\" form: list following named components: \"c\": matrix data frame samples distribution costs.  one column decision option. \"e\": matrix data frame samples distribution effects, likewise. \"k\": vector willingness--pay values. Objects class \"bcea\", created BCEA package, \"cost-effectiveness analysis\" format, therefore may supplied outputs argument. outputs matrix data frame, assumed \"net benefit\" form.  Otherwise list, assumed \"cost effectiveness analysis\" form. inputs Matrix data frame samples uncertainty distribution input parameters decision model.   number columns equal number parameters, columns named.    number rows samples outputs, row samples outputs give model output evaluated corresponding parameters. pars character vector giving parameters interest, single EVPPI calculation required.  vector multiple elements, joint expected value perfect information parameters together calculated. Alternatively, pars may list.  Multiple EVPPI calculations performed, one component pars defined vector form. pars must specified inputs matrix data frame. correspond particular columns inputs.    inputs vector, assumed define single parameter interest, pars required. method Character string indicating calculation method.  one string supplied, used calculations.  vector different strings can supplied different method desired different list components pars. default methods based nonparametric regression: \"gam\" generalized additive model implemented gam function mgcv package.  default method calculating EVPPI 4 fewer parameters. \"gp\" Gaussian process regression, described Strong et al. (2014) implemented SAVI package (http://savi.shef.ac.uk/SAVI/).  default method calculating EVPPI 4 parameters. \"inla\" INLA/SPDE Gaussian process regression method, Heath et al. (2016). \"bart\" Bayesian additive regression trees, using dbarts package. Particularly suited joint EVPPI many parameters. \"earth\" multivariate adaptive regression spline earth package (Milborrow, 2019). \"\" method Strong Oakley (2013).  supported single parameter EVPPI. \"sal\" method Sadatsafavi et al. (2013).  supported single parameter EVPPI. se TRUE, calculate standard error EVPPI possible.  Currently supported method=\"gam\", method=\"bart\".  (latter method correctly called posterior standard deviation). B Number parameter replicates calculating standard error. applicable method=\"gam\".  method=\"bart\" analogous quantity number MCMC samples, controlled ndpost argument bart, can passed argument evppi. nsim Number simulations model use calculating EVPPI.  first nsim rows objects inputs outputs used. verbose TRUE, messages printed describing step calculation, method supplies .  Useful see progress slow calculations. check TRUE, extra information estimation saved inside object function returns.  currently applies regression-based methods \"gam\" \"earth\" fitted regression model objects saved.  allows use check_regression function, produces diagnostic checks regression models. ... arguments control specific methods. method=\"gam\": gam_formula: character string giving right hand side formula supplied gam() function. default, tensor product parameters interest, e.g. pars = c(\"pi\",\"rho\"), gam_formula defaults t(pi, rho, bs=\"cr\").  option bs=\"cr\" indicates cubic spline regression basis, computationally efficient default \"thin plate\" basis.  four parameters interest, additional argument k=4 supplied te(), specifying four-dimensional basis, currently default SAVI package (http://savi.shef.ac.uk/SAVI/). spaces variable names inputs, converted underscores forming explicit gam_formula. method=\"gp\": gp_hyper_n: number samples use estimate hyperparameters Gaussian process regression method.  default, minimum following three quantities: 30 times number parameters interest, 250, number simulations used calculating EVPPI. maxSample: Maximum sample size employ method=\"gp\".  increase default 5000 computer sufficent memory invert square matrices dimension. method=\"inla\", described detail Baio, Berardi Heath (2017): int.ord (integer) maximum order interaction terms include regression predictor, e.g. int.ord=k k-way interactions used.  Currently applies effects costs. cutoff (default 0.3) controls density points inside mesh spatial part mode. Acceptable values typically interval (0.1,0.5), lower values implying points (thus better approximation greatercomputational time). convex.inner (default = -0.4) convex.outer (default = -0.7) control boundaries mesh. negative values can decreased (say -0.7 -1, respectively) increase distance points outer boundary, also increases precision computational time. robust. TRUE INLA use t prior distribution coefficients linear predictor, rather default normal. h.value (default=0.00005) controls accuracy INLA grid-search estimation hyperparameters. Lower values imply refined search (hence better accuracy), expense computational speed. plot_inla_mesh (default FALSE) Produce plot mesh. max.edge  Largest allowed triangle edge length constructing mesh, passed inla.mesh.2d. pfc_struc Variance structure pass pfc ldr package principal fitted components. default \"AIC\" selects one fits best given two basis terms.  Change , e.g. \"iso\", \"aniso\" \"unstr\" \"Error eigen...\" obtained. method=\"\": n.blocks Number blocks split sample . Required. method=\"sal\": n.seps Number separators (default 1).","code":""},{"path":"https://chjackson.github.io/voi/reference/evppi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the expected value of partial perfect information from a decision model — evppi","text":"data frame column pars indicating parameter(s) column evppi giving corresponding EVPPI. outputs \"cost-effectiveness analysis\" form one EVPPI per willingness--pay value, column k identifies willingness--pay. standard errors requested, standard errors returned column se.","code":""},{"path":"https://chjackson.github.io/voi/reference/evppi.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculate the expected value of partial perfect information from a decision model — evppi","text":"Strong, M., Oakley, J. E., & Brennan, . (2014). Estimating multiparameter partial expected value perfect information probabilistic sensitivity analysis sample: nonparametric regression approach. Medical Decision Making, 34(3), 311-326. Heath, ., Manolopoulou, ., & Baio, G. (2016). Estimating expected value partial perfect information health economic evaluations using integrated nested Laplace approximation. Statistics medicine, 35(23), 4264-4280. Baio, G., Berardi, ., & Heath, . (2017). Bayesian cost-effectiveness analysis R package BCEA. New York: Springer. Milborrow, S. (2019) earth: Multivariate Adaptive Regression Splines. R package version 5.1.2. Derived mda:mars Trevor Hastie Rob Tibshirani. Uses Alan Miller's Fortran utilities Thomas Lumley's leaps wrapper. https://CRAN.R-project.org/package=earth. Strong, M., & Oakley, J. E. (2013). efficient method computing single-parameter partial expected value perfect information. Medical Decision Making, 33(6), 755-766. Chicago Sadatsafavi, M., Bansback, N., Zafari, Z., Najafzadeh, M., & Marra, C. (2013). Need speed: efficient algorithm calculation single-parameter expected value partial perfect information. Value Health, 16(2), 438-448.","code":""},{"path":"https://chjackson.github.io/voi/reference/evppi_mc.html","id":null,"dir":"Reference","previous_headings":"","what":"Traditional two-level Monte Carlo estimator of EVPPI. — evppi_mc","title":"Traditional two-level Monte Carlo estimator of EVPPI. — evppi_mc","text":"Traditional two-level Monte Carlo estimator expected value partial perfect information decision-analytic model.  useful simplest examples.  realistically complex examples, methods implemented evppi function usually preferred.","code":""},{"path":"https://chjackson.github.io/voi/reference/evppi_mc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Traditional two-level Monte Carlo estimator of EVPPI. — evppi_mc","text":"","code":"evppi_mc(   model_fn,   par_fn,   pars,   nouter,   ninner,   wtp = NULL,   mfargs = NULL,   verbose = FALSE )"},{"path":"https://chjackson.github.io/voi/reference/evppi_mc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Traditional two-level Monte Carlo estimator of EVPPI. — evppi_mc","text":"model_fn function evaluate decision-analytic model given set parameters. one argument per parameter, return either: (net benefit format) vector giving net benefit decision option, (cost-effectiveness analysis format) matrix data frame two rows, one column decision option.  rows names \"e\" \"c\" assumed effects costs respectively. Otherwise, first row assumed effects, second costs. par_fn function generate random sample values parameters model_fn. return matrix data frame named columns matching arguments model_fn. required arguments model_fn supplied return value, evppi_mc looks list supplied mfargs argument. required arguments found results par_fn mfargs, model_fn defines default values arguments, default values used. first argument par_fn integer n denoting number random values draw parameter.  object returned par_fn n rows, one column parameter. one value drawn, par_fn also allowed return vector, still named. parameters may correlated.  wish compute EVPPI parameter correlated different parameter q, par_fn must argument name parameter.  argument set fixed value, par_fn return sample drawn conditionally value.  argument supplied, par_fn must return sample drawn marginal distribution. See vignette example. pars character vector giving parameters interest, EVPPI required.   correspond explicit argument model_fn. parameters interest assumed uncertainty distributions independent parameters. nouter Number outer samples ninner Number inner samples wtp Vector willingness--pay values.  used model_fn cost-effectiveness analyis format. mfargs Named list additional arguments supply model_fn. verbose Set TRUE print additional messages help debugging.","code":""},{"path":"https://chjackson.github.io/voi/reference/evppivar.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the expected value of partial perfect information for an estimation problem — evppivar","title":"Calculate the expected value of partial perfect information for an estimation problem — evppivar","text":"Calculate expected value partial perfect information estimation problem.  computes expected reduction variance quantity interest perfect information parameter parameters interest.","code":""},{"path":"https://chjackson.github.io/voi/reference/evppivar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the expected value of partial perfect information for an estimation problem — evppivar","text":"","code":"evppivar(   outputs,   inputs,   pars = NULL,   method = NULL,   nsim = NULL,   verbose = TRUE,   ... )"},{"path":"https://chjackson.github.io/voi/reference/evppivar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the expected value of partial perfect information for an estimation problem — evppivar","text":"outputs vector values quantity interest, sampled uncertainty distribution quantity induced uncertainty parameters.   can also data frame one column. Typically come Monte Carlo sample, first sample uncertainty distributions parameters, compute quantity interest function parameters.  might also produced Markov Chain Monte Carlo sample joint distribution parameters outputs. inputs Matrix data frame samples uncertainty distribution input parameters decision model.   number columns equal number parameters, columns named.    number rows samples outputs, row samples outputs give model output evaluated corresponding parameters. pars character vector giving parameters interest, single EVPPI calculation required.  vector multiple elements, joint expected value perfect information parameters together calculated. Alternatively, pars may list.  Multiple EVPPI calculations performed, one component pars defined vector form. pars must specified inputs matrix data frame. correspond particular columns inputs.    inputs vector, assumed define single parameter interest, pars required. method Character string indicating calculation method.  one string supplied, used calculations.  vector different strings can supplied different method desired different list components pars. default methods based nonparametric regression: \"gam\" generalized additive model implemented gam function mgcv package.  default method calculating EVPPI 4 fewer parameters. \"gp\" Gaussian process regression, described Strong et al. (2014) implemented SAVI package (http://savi.shef.ac.uk/SAVI/).  default method calculating EVPPI 4 parameters. \"inla\" INLA/SPDE Gaussian process regression method, Heath et al. (2016). \"bart\" Bayesian additive regression trees, using dbarts package. Particularly suited joint EVPPI many parameters. \"earth\" multivariate adaptive regression spline earth package (Milborrow, 2019). \"\" method Strong Oakley (2013).  supported single parameter EVPPI. \"sal\" method Sadatsafavi et al. (2013).  supported single parameter EVPPI. nsim Number simulations model use calculating EVPPI.  first nsim rows objects inputs outputs used. verbose TRUE, messages printed describing step calculation, method supplies .  Useful see progress slow calculations. ... arguments control specific methods. method=\"gam\": gam_formula: character string giving right hand side formula supplied gam() function. default, tensor product parameters interest, e.g. pars = c(\"pi\",\"rho\"), gam_formula defaults t(pi, rho, bs=\"cr\").  option bs=\"cr\" indicates cubic spline regression basis, computationally efficient default \"thin plate\" basis.  four parameters interest, additional argument k=4 supplied te(), specifying four-dimensional basis, currently default SAVI package (http://savi.shef.ac.uk/SAVI/). spaces variable names inputs, converted underscores forming explicit gam_formula. method=\"gp\": gp_hyper_n: number samples use estimate hyperparameters Gaussian process regression method.  default, minimum following three quantities: 30 times number parameters interest, 250, number simulations used calculating EVPPI. maxSample: Maximum sample size employ method=\"gp\".  increase default 5000 computer sufficent memory invert square matrices dimension. method=\"inla\", described detail Baio, Berardi Heath (2017): int.ord (integer) maximum order interaction terms include regression predictor, e.g. int.ord=k k-way interactions used.  Currently applies effects costs. cutoff (default 0.3) controls density points inside mesh spatial part mode. Acceptable values typically interval (0.1,0.5), lower values implying points (thus better approximation greatercomputational time). convex.inner (default = -0.4) convex.outer (default = -0.7) control boundaries mesh. negative values can decreased (say -0.7 -1, respectively) increase distance points outer boundary, also increases precision computational time. robust. TRUE INLA use t prior distribution coefficients linear predictor, rather default normal. h.value (default=0.00005) controls accuracy INLA grid-search estimation hyperparameters. Lower values imply refined search (hence better accuracy), expense computational speed. plot_inla_mesh (default FALSE) Produce plot mesh. max.edge  Largest allowed triangle edge length constructing mesh, passed inla.mesh.2d. pfc_struc Variance structure pass pfc ldr package principal fitted components. default \"AIC\" selects one fits best given two basis terms.  Change , e.g. \"iso\", \"aniso\" \"unstr\" \"Error eigen...\" obtained. method=\"\": n.blocks Number blocks split sample . Required. method=\"sal\": n.seps Number separators (default 1).","code":""},{"path":"https://chjackson.github.io/voi/reference/evppivar.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculate the expected value of partial perfect information for an estimation problem — evppivar","text":"Jackson, C., Presanis, ., Conti, S., & De Angelis, D. (2019). Value information: Sensitivity analysis research design Bayesian evidence synthesis. Journal American Statistical Association, 114(528), 1436-1449.","code":""},{"path":"https://chjackson.github.io/voi/reference/evsi.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the expected value of sample information from a decision-analytic\nmodel — evsi","title":"Calculate the expected value of sample information from a decision-analytic\nmodel — evsi","text":"Calculate expected value sample information decision-analytic model","code":""},{"path":"https://chjackson.github.io/voi/reference/evsi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the expected value of sample information from a decision-analytic\nmodel — evsi","text":"","code":"evsi(   outputs,   inputs,   study = NULL,   datagen_fn = NULL,   pars = NULL,   pars_datagen = NULL,   n = 100,   aux_pars = NULL,   method = NULL,   likelihood = NULL,   analysis_fn = NULL,   analysis_args = NULL,   model_fn = NULL,   par_fn = NULL,   Q = 50,   npreg_method = \"gam\",   nsim = NULL,   verbose = FALSE,   check = FALSE,   ... )"},{"path":"https://chjackson.github.io/voi/reference/evsi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the expected value of sample information from a decision-analytic\nmodel — evsi","text":"outputs take one two forms \"net benefit\" form: matrix data frame samples uncertainty distribution expected net benefit.  number rows equal number samples, number columns equal number decision options. \"cost-effectiveness analysis\" form: list following named components: \"c\": matrix data frame samples distribution costs.  one column decision option. \"e\": matrix data frame samples distribution effects, likewise. \"k\": vector willingness--pay values. Objects class \"bcea\", created BCEA package, \"cost-effectiveness analysis\" format, therefore may supplied outputs argument. outputs matrix data frame, assumed \"net benefit\" form.  Otherwise list, assumed \"cost effectiveness analysis\" form. inputs Matrix data frame samples uncertainty distribution input parameters decision model.   number columns equal number parameters, columns named.    number rows samples outputs, row samples outputs give model output evaluated corresponding parameters. study Name one built-study types supported package EVSI calculation.  supplied, columns inputs correspond parameters governing study data identified pars. Current built-studies \"binary\" study binary outcome observed one sample individuals.   Requires one parameter: probability outcome. sample size specifed n argument evsi(), binomially-distributed outcome named X1. \"trial_binary\" Two-arm trial binary outcome.   Requires two parameters: probability outcome arm 1 2 respectively. sample size arm, specifed n argument evsi(), binomial outcomes named X1 X2 respectively. \"normal_known\" study normally-distributed outcome, known standard deviation, one sample individuals.  Likewise sample size specified n argument evsi().  standard deviation defaults 1, can changed specifying sd component aux_pars argument, e.g. evsi(..., aux_pars=list(sd=2)). Either study datagen_fn supplied evsi(). datagen_fn proposed study one built-types supported, can specified argument R function sample predicted data study.  function following specification: function's first argument data frame parameter simulations, one row per simulation one column per parameter. parameters data frame must found inputs. function return data frame. returned data frame number rows equal number parameter simulations inputs. inputs considered sample posterior, datagen_fn(inputs) returns corresponding sample posterior predictive distribution, includes two sources uncertainty: () uncertainty parameters (b) sampling variation observed data given fixed parameter values. function can optionally one argument. , additional arguments given default values definition datagen_fn.  argument called n, interpreted sample size proposed study. pars Character vector identifying parameters learned proposed study. columns inputs. required methods involve intermediate EVPPI calculation, , method=\"\" method=\"mm\".  consist variables used definition datagen_fn (likelihood, analysis_fn model_fn, used) variables. pars_datagen Character vector identifying columns inputs parameters required generate data proposed study. Required proposed study specified study argument, specified datagen_fn argument. example, study = \"trial_binary\" specified, pars_datagen vector two elements naming probability outcome arm 1 arm 2 respectively. pars_datagen supplied, assumed pars. Note can different.  Even study data generated particular parameter, analysing data choose ignore information data provides parameter. n Sample size future study, vector alternative sample sizes. understood built-study designs.  studies specified user datagen_fn, datagen_fn argument n, interpreted sample size. Currently shortcut supported one quantity required describe sample size, example, trials unbalanced arms.  case, hard-code required sample sizes datagen_fn. nonparametric regression importance sampling methods, computation simply repeated sample size supplied . moment matching method uses regression model estimate dependency EVSI sample size, hence enable EVSI calculated efficiently number sample sizes (Heath et al. 2019). aux_pars list additional fixed arguments supply function generate data, whether built-user-defined function, e.g. evsi(..., aux_pars = list(sd=2)) change fixed standard deviation \"normal_known\" model. method Character string indicating calculation method. nonparametric regression methods supported evppi, \"gam\",\"gp\",\"earth\",\"inla\", can also used EVSI calculation regressing summary statistic predicted data (Strong et al 2015).   Defaults \"gam\". \"\" importance sampling (Menzies 2016) \"mm\" moment matching (Heath et al 2018) (experimental partially implemented) Note  \"\" \"mm\" methods used conjunction nonparametric regression, thus gam_formula argument can supplied evsi specify regression - see evppi. likelihood Likelihood function, required (required) importance sampling method study design one built-ones used.  two arguments follows: data frame predicted data. Columns defined number outcomes data, names matching data frame returned datagen_fn. data frame parameter values, whose names correspond variables inputs. function return vector whose length matches number rows parameters data frame given second argument.   element vector gives likelihood corresponding set parameters, given data first argument.  example given vignette. Note definition likelihood agree definition datagen_fn define consistent sampling distribution data. analysis_fn Function fits Bayesian model generated data.   Required method=\"mm\" study design one built-ones used.  function takes following arguments: data: data frame names matching output datagen_fn args: list constants required Bayesian analysis, e.g. prior parameters, options analysis, e.g. number MCMC simulations. component list called n assumed contain sample size study. pars Names parameters whose posterior sampled. function return data frame names matching pars, containing sample posterior distribution parameters given data supplied data. analysis_fn required three arguments, need use elements args pars body analysis_fn.  Instead, sample sizes, prior parameters, MCMC options parameter names can hard-coded inside analysis_fn. Passing function arguments (via analysis_args argument evsi) necessary want use analysis_fn EVSI calculations different sample sizes settings. analysis_args List arguments required Bayesian analysis predicted data, e.g. definitions prior options control sampling.  used method=\"mm\".  required study design one built-ones specified study.  custom design specifed analysis_fn, constants needed analysis_fn can either supplied analysis_args, hard-coded analysis_fn . built-designs, lists following named components. optional component niter case defines posterior sample size (default 1000). study=\"binary\": b: Beta shape parameters study=\"trial_binary\": a1 b1: Beta shape parameters prior first arm,  a2 b2: Beta shape parameters prior second arm. study=\"normal_known\": prior_mean, prior_sd (prior mean standard deviation) sampling_sd (SD individual-level normal observation, sampling SD mean outcome study sampling_sd/sqrt(n). model_fn Function evaluates decision-analytic model, given parameter values.  Required method=\"mm\".  See evppi_mc full specification. par_fn Function simulate values uncertainty distributions parameters needed decision-analytic model.  take one argument return data frame one row simulated value, one column parameter.  See evppi_mc full specification. Q Number quantiles use method=\"mm\". npreg_method Method use calculate EVPPI, methods require .  passed evppi method argument. nsim Number simulations model use calculating EVPPI.  first nsim rows objects inputs outputs used. verbose TRUE, messages printed describing step calculation, method supplies .  Useful see progress slow calculations. check TRUE, extra information estimation saved inside object function returns.  currently applies regression-based methods \"gam\" \"earth\" fitted regression model objects saved.  allows use check_regression function, produces diagnostic checks regression models. ... arguments required specific methods","code":""},{"path":"https://chjackson.github.io/voi/reference/evsi.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculate the expected value of sample information from a decision-analytic\nmodel — evsi","text":"Strong, M., Oakley, J. E., Brennan, ., & Breeze, P. (2015). Estimating expected value sample information using probabilistic sensitivity analysis sample: fast, nonparametric regression-based method. Medical Decision Making, 35(5), 570-583. Menzies, N. . (2016). efficient estimator expected value sample information. Medical Decision Making, 36(3), 308-320. Heath, ., Manolopoulou, ., & Baio, G. (2018). Efficient Monte Carlo estimation expected value sample information using moment matching. Medical Decision Making, 38(2), 163-173. Heath, ., Manolopoulou, ., & Baio, G. (2019). Estimating expected value sample information across different sample sizes using moment matching nonlinear regression. Medical Decision Making, 39(4), 347-359.","code":""},{"path":"https://chjackson.github.io/voi/reference/evsivar.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the expected value of sample information for an estimation problem — evsivar","title":"Calculate the expected value of sample information for an estimation problem — evsivar","text":"Calculate expected value sample information estimation problem.  computes expected reduction variance quantity interest study certain design informs parameters interest.","code":""},{"path":"https://chjackson.github.io/voi/reference/evsivar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the expected value of sample information for an estimation problem — evsivar","text":"","code":"evsivar(   outputs,   inputs,   study = NULL,   datagen_fn = NULL,   pars = NULL,   n = 100,   aux_pars = NULL,   method = NULL,   nsim = NULL,   verbose = TRUE,   ... )"},{"path":"https://chjackson.github.io/voi/reference/evsivar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the expected value of sample information for an estimation problem — evsivar","text":"outputs vector values quantity interest, sampled uncertainty distribution quantity induced uncertainty parameters. inputs Matrix data frame samples uncertainty distribution input parameters decision model.   number columns equal number parameters, columns named.    number rows samples outputs, row samples outputs give model output evaluated corresponding parameters. study Name one built-study types supported package EVSI calculation.  supplied, columns inputs correspond parameters governing study data identified pars. Current built-studies \"binary\" study binary outcome observed one sample individuals.   Requires one parameter: probability outcome. sample size specifed n argument evsi(), binomially-distributed outcome named X1. \"trial_binary\" Two-arm trial binary outcome.   Requires two parameters: probability outcome arm 1 2 respectively. sample size arm, specifed n argument evsi(), binomial outcomes named X1 X2 respectively. \"normal_known\" study normally-distributed outcome, known standard deviation, one sample individuals.  Likewise sample size specified n argument evsi().  standard deviation defaults 1, can changed specifying sd component aux_pars argument, e.g. evsi(..., aux_pars=list(sd=2)). Either study datagen_fn supplied evsi(). datagen_fn proposed study one built-types supported, can specified argument R function sample predicted data study.  function following specification: function's first argument data frame parameter simulations, one row per simulation one column per parameter. parameters data frame must found inputs. function return data frame. returned data frame number rows equal number parameter simulations inputs. inputs considered sample posterior, datagen_fn(inputs) returns corresponding sample posterior predictive distribution, includes two sources uncertainty: () uncertainty parameters (b) sampling variation observed data given fixed parameter values. function can optionally one argument. , additional arguments given default values definition datagen_fn.  argument called n, interpreted sample size proposed study. pars Character vector identifying parameters learned proposed study. columns inputs. required methods involve intermediate EVPPI calculation, , method=\"\" method=\"mm\".  consist variables used definition datagen_fn (likelihood, analysis_fn model_fn, used) variables. n Sample size future study, vector alternative sample sizes. understood built-study designs.  studies specified user datagen_fn, datagen_fn argument n, interpreted sample size. Currently shortcut supported one quantity required describe sample size, example, trials unbalanced arms.  case, hard-code required sample sizes datagen_fn. nonparametric regression importance sampling methods, computation simply repeated sample size supplied . moment matching method uses regression model estimate dependency EVSI sample size, hence enable EVSI calculated efficiently number sample sizes (Heath et al. 2019). aux_pars list additional fixed arguments supply function generate data, whether built-user-defined function, e.g. evsi(..., aux_pars = list(sd=2)) change fixed standard deviation \"normal_known\" model. method See evsi, nonparametric regression methods currently supported evsivar. nsim Number simulations model use calculating EVPPI.  first nsim rows objects inputs outputs used. verbose TRUE, messages printed describing step calculation, method supplies .  Useful see progress slow calculations. ... arguments required specific methods","code":""},{"path":"https://chjackson.github.io/voi/reference/evsivar.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculate the expected value of sample information for an estimation problem — evsivar","text":"Jackson, Jackson, C., Presanis, ., Conti, S., & De Angelis, D. (2019). Value information: Sensitivity analysis research design Bayesian evidence synthesis. Journal American Statistical Association, 114(528), 1436-1449.","code":""},{"path":"https://chjackson.github.io/voi/reference/plot.evppi.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot EVPPI estimates as simple dot or curve plots. — plot.evppi","title":"Plot EVPPI estimates as simple dot or curve plots. — plot.evppi","text":"plotting functions intended quick interactive exploration EVPPI results, deliberately limited options customising .","code":""},{"path":"https://chjackson.github.io/voi/reference/plot.evppi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot EVPPI estimates as simple dot or curve plots. — plot.evppi","text":"","code":"# S3 method for evppi plot(x, type = NULL, order = FALSE, top = NULL, ...)"},{"path":"https://chjackson.github.io/voi/reference/plot.evppi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot EVPPI estimates as simple dot or curve plots. — plot.evppi","text":"x Object returned evppi. type \"dots\" dot plot EVPPI parameter.  x includes multiple willingness--pay values parameter, shown multiple dots. \"curves\" plot EVPPI willingness--pay, different parameters distinguished different curves.  applicable multiple willingness--pay values included x. order dot plots, order plot highest EVPPI values top. top positive integer. specified, example top=5 five parameters included plot, top five maximum EVPPI values parameter. ... arguments (currently unused).","code":""},{"path":"https://chjackson.github.io/voi/reference/plot.evppi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot EVPPI estimates as simple dot or curve plots. — plot.evppi","text":"ggplot2 object.","code":""},{"path":"https://chjackson.github.io/voi/reference/plot.evppi.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot EVPPI estimates as simple dot or curve plots. — plot.evppi","text":"publication quality graphics, advised use ggplot2 hand data returned evppi.   Examine code plot_evppi_dots plot_evppi_curves see plots might constructed.","code":""},{"path":"https://chjackson.github.io/voi/reference/voi-package.html","id":null,"dir":"Reference","previous_headings":"","what":"Methods to calculate the Expected Value of Information — voi-package","title":"Methods to calculate the Expected Value of Information — voi-package","text":"evppi calculates expected value partial perfect information decision-analytic model.  Currently implements selection nonparametric regression methods.","code":""},{"path":"https://chjackson.github.io/voi/reference/voi-package.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Methods to calculate the Expected Value of Information — voi-package","text":"evsi calculates expected value sample information.   Currently implements set nonparametric regression methods evppi, method based importance sampling. evppi evsi require sample inputs outputs Monte Carlo probabilistic analysis decision-analytic model. Analogous functions evppivar evsivar calculate EVPPI EVSI models used estimation rather decision-making.   value information measured expected reductions variance uncertain model output interest. package overview vignette gives worked examples use functions.","code":""},{"path":"https://chjackson.github.io/voi/reference/voi-package.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Methods to calculate the Expected Value of Information — voi-package","text":"Heath, ., Manolopoulou, ., & Baio, G. (2017). review methods analysis expected value information. Medical Decision Making, 37(7), 747-758. Heath, ., Kunst, N., Jackson, C., Strong, M., Alarid-Escudero, F., Goldhaber-Fiebert, J. D., Baio, G. Menzies, N., Jalal, H. (2020). Calculating Expected Value Sample Information Practice: Considerations 3 Case Studies. Medical Decision Making, 40(3), 314-326. Kunst, N., Wilson, E. C., Glynn, D., Alarid-Escudero, F., Baio, G., Brennan, ., Fairley, M., Glynn, D., Goldhaber-Fiebert, J. D., Jackson, C., Jalal, H., Menzies, N. ., Strong, M., Thom, H., Heath, . (2020). Computing Expected Value Sample Information Efficiently: Practical Guidance Recommendations Four Model-Based Methods. Value Health, 3(6), 734-742.","code":""}]
